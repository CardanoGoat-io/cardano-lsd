{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.19.4",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "cardano-lsd!",
  "docComment": "/**\n * A library cardano-lsd frontend components and animations. For details, see {@link https://github.com/CardanoGoat-io/cardano-lsd | github}\n *\n * @remarks\n *\n * The `cardano-lsd` defines the {@link CardaNostraAdaSpinner} class. To draw the spinner, call {@link CardaNostraAdaSpinner.attachSVG | attachSVG() function}.\n *\n * @packageDocumentation\n */\n",
  "name": "cardano-lsd",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "cardano-lsd!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner:class",
          "docComment": "/**\n * Create a new ada spinner to attach to SVG.\n *\n * @remarks\n *\n * This method is part of the cardano-lsd animation library.\n *\n * @typeParam spinnerSettings - \n *\n * @returns A new CardaNostraAdaSpinner\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CardaNostraAdaSpinner "
            }
          ],
          "releaseTag": "Public",
          "name": "CardaNostraAdaSpinner",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CardaNostraAdaSpinner` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ id, color, delay, duration }: "
                },
                {
                  "kind": "Reference",
                  "text": "spinnerSetting",
                  "canonicalReference": "cardano-lsd!~spinnerSetting:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ id, color, delay, duration }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner#attachSVG:member(1)",
              "docComment": "/**\n * Attach SVG and run animation on CardaNostraAdaSpinner by Element Id.\n *\n * @remarks\n *\n * This method attaches and animates the element.\n *\n * @example\n * ```ts\n * let spinner = new CardaNostraAdaSpinner({id=\"element-id\"});\n * // after page load attach svg to animate\n * spinner.attachSVG();\n * ```\n *\n * @eventProperty @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attachSVG(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "attachSVG"
            },
            {
              "kind": "Property",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner#color:member",
              "docComment": "/**\n * Get Element Color.\n *\n * @example\n * ```ts\n * let spinner = new CardaNostraAdaSpinner({id=\"element-id\", color:\"green\"});\n * const spinnerColor = spinner.color;\n * // green\n * ```\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get color(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset color(value: string);"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner#delay:member",
              "docComment": "/**\n * Get Animation Delay.\n *\n * @example\n * ```ts\n * let spinner = new CardaNostraAdaSpinner({id=\"element-id\", delay:0.5});\n * const spinnerDelay = spinner.delay;\n * // 0.5\n * ```\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get delay(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset delay(value: number);"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "delay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner#duration:member",
              "docComment": "/**\n * Get Animation Duration.\n *\n * @example\n * ```ts\n * let spinner = new CardaNostraAdaSpinner({id=\"element-id\", duration:10});\n * const spinnerDuration = spinner.duration;\n * // 10\n * ```\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get duration(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset duration(value: number);"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "cardano-lsd!CardaNostraAdaSpinner#htmlId:member",
              "docComment": "/**\n * Get Element Id.\n *\n * @example\n * ```ts\n * let spinner = new CardaNostraAdaSpinner({id=\"element-id\"});\n * const spinnerId = spinner.htmlId;\n * ```\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get htmlId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                },
                {
                  "kind": "Content",
                  "text": "\n\nset htmlId(value: string);"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "htmlId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
